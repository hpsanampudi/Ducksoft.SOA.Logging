<?xml version="1.0" encoding="utf-8" ?>
<log4net>
  <appender name="AdoNetAppender" type="log4net.Appender.AdoNetAppender">
    <bufferSize value="1" /> <!--Hp: Note - the buffer size value defined here shows how many messages do we need to quee in memeory and write at once-->
    <connectionType value="System.Data.SqlClient.SqlConnection, System.Data, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
    <connectionString value="data source=.;initial catalog=LogDB;integrated security=true;"/>
    <commandText value="INSERT INTO [soa].[Logging] ([TicketId],[Level],[UserName],[DateTime],[Thread],
                 [AppName],[Layer],[Message],[Method],[FilePath],[LineNo],[CallStack],[HelpLink]) 
                 VALUES (@ticketId, @level, @userName, @dateTime, @thread, @appName, @layer, @message, 
                 @method, @filePath, @lineNo, @callStack, @helpLink)" />

    <!--Hp: Script to create database logging table 
    CREATE TABLE [soa].[Logging]
    (
        [Id] INT NOT NULL IDENTITY(1,1) PRIMARY KEY,
        [TicketId] [varchar] (255) NOT NULL,
        [Level] [varchar] (50) NOT NULL,
        [UserName] [varchar] (255) NOT NULL,
        [DateTime] [datetime] NOT NULL,
        [Thread] [int] NULL,
    
        [AppName] [varchar] (255) NULL,
        [Layer] [varchar] (255) NULL,
        [Message] [varchar] (1024) NOT NULL,
        [Method] [varchar] (255) NOT NULL,
        [FilePath] [varchar] (255) NOT NULL,
        [LineNo] [int] NULL,
    
        [CallStack] [varchar] (2048) NULL,
        [HelpLink] [varchar] (255) NULL
    )-->

    <parameter>
      <!--Hp : Note - ticketId value is in Guid format-->
      <parameterName value="@ticketId" />
      <dbType value="String" />
      <size value="255" />
      <layout type="Ducksoft.SOA.BL.Logging.Layouts.CustFaultLayoutConverter, Ducksoft.SOA.BL.Logging">
        <conversionPattern value="%custFaultInfo{ticketId}" />
      </layout>
    </parameter>
    <parameter>
      <parameterName value="@level" />
      <dbType value="String" />
      <size value="50" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%level" />
      </layout>
    </parameter>
    <parameter>
      <parameterName value="@userName" />
      <dbType value="String" />
      <size value="255" />
      <layout type="Ducksoft.SOA.BL.Logging.Layouts.CustFaultLayoutConverter, Ducksoft.SOA.BL.Logging">
        <conversionPattern value="%custFaultInfo{userName}" />
      </layout>
    </parameter>
    <parameter>
      <parameterName value="@dateTime" />
      <dbType value="DateTime" />
      <layout type="log4net.Layout.RawTimeStampLayout" />
    </parameter>
    <parameter>
      <parameterName value="@thread" />
      <dbType value="Int32" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%thread" />
      </layout>
    </parameter>
    <parameter>
      <parameterName value="@appName" />
      <dbType value="String" />
      <size value="255" />
      <layout type="Ducksoft.SOA.BL.Logging.Layouts.CustFaultLayoutConverter, Ducksoft.SOA.BL.Logging">
        <conversionPattern value="%custFaultInfo{appName}" />
      </layout>
    </parameter>
    <parameter>
      <parameterName value="@layer" />
      <dbType value="String" />
      <size value="255" />
      <layout type="Ducksoft.SOA.BL.Logging.Layouts.CustFaultLayoutConverter, Ducksoft.SOA.BL.Logging">
        <conversionPattern value="%custFaultInfo{layer}" />
      </layout>
    </parameter>
    <parameter>
      <parameterName value="@message" />
      <dbType value="String" />
      <size value="1024" />
      <layout type="Ducksoft.SOA.BL.Logging.Layouts.CustFaultLayoutConverter, Ducksoft.SOA.BL.Logging">
        <conversionPattern value="%custFaultInfo{message}" />
      </layout>
    </parameter>
    <parameter>
      <parameterName value="@method" />
      <dbType value="String" />
      <size value="255" />
      <layout type="Ducksoft.SOA.BL.Logging.Layouts.CustFaultLayoutConverter, Ducksoft.SOA.BL.Logging">
        <conversionPattern value="%custFaultInfo{method}" />
      </layout>
    </parameter>
    <parameter>
      <parameterName value="@filePath" />
      <dbType value="String" />
      <size value="255" />
      <layout type="Ducksoft.SOA.BL.Logging.Layouts.CustFaultLayoutConverter, Ducksoft.SOA.BL.Logging">
        <conversionPattern value="%custFaultInfo{filePath}" />
      </layout>
    </parameter>
    <parameter>
      <parameterName value="@lineNo" />
      <dbType value="Int32" />
      <layout type="Ducksoft.SOA.BL.Logging.Layouts.CustFaultLayoutConverter, Ducksoft.SOA.BL.Logging">
        <conversionPattern value="%custFaultInfo{lineNo}" />
      </layout>
    </parameter>
    <parameter>
      <parameterName value="@callStack" />
      <dbType value="String" />
      <size value="2048" />
      <layout type="Ducksoft.SOA.BL.Logging.Layouts.CustFaultLayoutConverter, Ducksoft.SOA.BL.Logging">
        <conversionPattern value="%custFaultInfo{callStack}" />
      </layout>
    </parameter>
    <parameter>
      <parameterName value="@helpLink" />
      <dbType value="String" />
      <size value="255" />
      <layout type="Ducksoft.SOA.BL.Logging.Layouts.CustFaultLayoutConverter, Ducksoft.SOA.BL.Logging">
        <conversionPattern value="%custFaultInfo{helpLink}" />
      </layout>
    </parameter>
    <filter type="log4net.Filter.LevelRangeFilter">
      <levelMin value="ERROR"/>
      <levelMax value="FATAL"/>
    </filter>    
  </appender>
  <appender name="RollingLogFileAppender" type="log4net.Appender.RollingFileAppender">
    <!--Hp: On Server %appdata% path is C:\Windows\system32\config\systemprofile\AppData\Roaming-->
    <file value="${APPDATA}\Ducksoft\SOA\Logs\Log.xml" />
    <appendToFile value="true" />
    <lockingModel type="log4net.Appender.RollingFileAppender+MinimalLock" />
    <encoding value="unicodeFFFE" />
    <rollingStyle value="Composite" />
    <datePattern value="yyyyMMdd" />
    <maxSizeRollBackups value="10" />
    <maximumFileSize value="1MB" />
    <layout type="Ducksoft.SOA.BL.Logging.Layouts.CustLog4NetXmlLayout, Ducksoft.SOA.BL.Logging" />
  </appender>
  <appender name="EventLogAppender" type="log4net.Appender.EventLogAppender" >
    <logName value="Ducksoft" />
    <applicationName value="SOA_Logging" />
    <layout type="Ducksoft.SOA.BL.Logging.Layouts.CustFaultLayoutConverter, Ducksoft.SOA.BL.Logging">
      <conversionPattern value="
        [TicketId] : %-5custFaultInfo{ticketId}
        [Level] : %-5level 
        [UserName] : %-5custFaultInfo{userName} 
        [DateTime] : %-5date 
        [Thread] : %-5thread
        [AppName] : %-5custFaultInfo{appName}
        [Layer] : %-5custFaultInfo{layer}
        [Message] : %-5custFaultInfo{message}
        [Method] : %-5custFaultInfo{method}
        [FilePath] : %-5custFaultInfo{filePath}
        [LineNo] : %-5custFaultInfo{lineNo}
        [HelpLink] : %-5custFaultInfo{helpLink}
        [CallStack] : %-5custFaultInfo{callStack}" />
    </layout>
  </appender>
  <!--Hp: DebugAppender is used to trace log4net related errors. The trace messages are written in VS output window-->
  <!--Also only uncomment below line of code when log4net appenders are not working.-->
  <!--<appender name="DebugAppender" type="log4net.Appender.DebugAppender">
    <immediateFlush value="true" />
    <layout type="log4net.Layout.SimpleLayout" />
  </appender>-->
  <root>
    <level value="ALL" />
    <!--<appender-ref ref="AdoNetAppender" />-->
    <appender-ref ref="RollingLogFileAppender" />
    <appender-ref ref="EventLogAppender" />
    <!--Hp: Only uncomment below line of code when log4net appenders are not working.-->
    <!--<appender-ref ref="DebugAppender" />-->
  </root>
</log4net>
